# Make file for DPCRTLMM
# Written by Overlord David Duncan Ross Palmer
# Overlord@DayboLogic.co.uk
# 24th August 2000
# Last modified 11th January 2002 by DDRP

# This Makefile designed for Borland C++, you'll have to change the tools
# at the top of the file in the variables section to use Micro$oft or Colelus
# linker.  I have made everything easy to modify by putting it at the top
# of the file but if you have problems, email me.

# Paths & filenames - If this file is not called Makefile remember to
# change the variable 'THISFILE'
THISFILE=Makefile.bor
LIBTITLE=dpcrtlmm
LIBNAME=$(LIBTITLE).lib
# Master dependancies ALWAYS cause a rebuild
MASTERDEP=dpc_build.h dpcrtlmm.h $(THISFILE) dpc_biglock.h

# Tools
LIBRARY=tlib
# -A : ANSI C only
# -c : Compile with no link
COMPILE=bcc32
ANSI=-A
CFLGS=-c -DHDRSTOP -DDPCRTLMM_HDRSTOP -v   # Debugging
LFLGS=-v

# File control commands
FILEEXISTS=if exist
ERASE=erase
COPY=copy
PRINT=@echo
BLANKLINE=.

# Default build rule if nothing specified to build (build lib only)
default : $(LIBNAME)

example : example1 example2 example3

example1 : example1.exe
example2 : example2.exe
example3 : example3.exe

example1.exe : $(MASTERDEP) example1.obj $(LIBNAME)
	$(PRINT)$(BLANKLINE)
	$(PRINT) Building example1 program
        $(COMPILE) $(LFLGS) -eexample1.exe example1.obj $(LIBNAME)

example2.exe : $(MASTERDEP) example2.obj dpccap.obj $(LIBNAME)
	$(PRINT)$(BLANKLINE)
	$(PRINT) Building example2 program
        $(COMPILE) $(LFLGS) -eexample2.exe example2.obj dpccap.obj $(LIBNAME)

example3.exe : $(MASTERDEP) example3.obj $(LIBNAME)
	$(PRINT)$(BLANKLINE)
	$(PRINT) Building example3 program
        $(COMPILE) $(LFLGS) -eexample3.exe example3.obj $(LIBNAME)

example1.obj : $(MASTERDEP) example1.c
	$(COMPILE) $(ANSI) $(CFLGS) example1.c

example2.obj : $(MASTERDEP) example2.cpp
	$(COMPILE) $(ANSI) $(CFLGS) example2.cpp

example3.obj : $(MASTERDEP) example3.c
	$(COMPILE) $(ANSI) $(CFLGS) example3.c

dpccap.obj : $(MASTERDEP) dpccap.cpp
	$(COMPILE) $(ANSI) $(CFLGS) dpccap.cpp

$(LIBNAME) : dpc_alloc.obj dpc_blkarray.obj dpc_calloc.obj dpc_free.obj dpc_isbad.obj dpc_stats.obj dpc_dbghooks.obj dpc_locktrap.obj dpc_safelist.obj dpcrtlmm.obj dpc_log.obj dpc_vptrap.obj dpc_trap.obj dpc_realloc.obj dpc_intdata.obj dpc_iblkptr.obj dpc_getblksz.obj dpc_bloclock.obj dpc_bdflags.obj dpc_biglock.obj
	$(FILEEXISTS) $(LIBNAME) $(ERASE) $(LIBNAME)
	-$(LIBRARY) $(LIBNAME) +dpc_alloc.obj
	-$(LIBRARY) $(LIBNAME) +dpc_blkarray.obj
	-$(LIBRARY) $(LIBNAME) +dpc_calloc.obj
	-$(LIBRARY) $(LIBNAME) +dpc_free.obj
	-$(LIBRARY) $(LIBNAME) +dpc_isbad.obj
	-$(LIBRARY) $(LIBNAME) +dpc_stats.obj
	-$(LIBRARY) $(LIBNAME) +dpc_dbghooks.obj
	-$(LIBRARY) $(LIBNAME) +dpc_locktrap.obj
	-$(LIBRARY) $(LIBNAME) +dpc_safelist.obj
	-$(LIBRARY) $(LIBNAME) +dpcrtlmm.obj
	-$(LIBRARY) $(LIBNAME) +dpc_log.obj
	-$(LIBRARY) $(LIBNAME) +dpc_vptrap.obj
	-$(LIBRARY) $(LIBNAME) +dpc_trap.obj
	-$(LIBRARY) $(LIBNAME) +dpc_realloc.obj
	-$(LIBRARY) $(LIBNAME) +dpc_intdata.obj
	-$(LIBRARY) $(LIBNAME) +dpc_iblkptr.obj
	-$(LIBRARY) $(LIBNAME) +dpc_getblksz.obj
	-$(LIBRARY) $(LIBNAME) +dpc_bloclock.obj
	-$(LIBRARY) $(LIBNAME) +dpc_bdflags.obj
        -$(LIBRARY) $(LIBNAME) +dpc_biglock.obj
	$(PRINT)$(BLANKLINE)
	$(PRINT) (C)2000-2002, David Duncan Ross Palmer, Daybo Logic.
	$(PRINT) Subject to the GNU General Public License.
	$(PRINT) http://www.daybologic.co.uk/dev/dpcrtlmm

dpc_alloc.obj : $(MASTERDEP) dpc_intdata.h dpc_log.h dpc_vptrap.h dpc_dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_alloc.c

dpc_blkarray.obj : $(MASTERDEP) dpc_intdata.h dpc_log.h dpc_trap.h dpc_safelist.h dpc_dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_blkarray.c

dpc_calloc.obj : $(MASTERDEP) dpc_intdata.h dpc_log.h dpc_iblkptr.h dpc_dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_calloc.c

dpc_free.obj : $(MASTERDEP) dpc_intdata.h dpc_vptrap.h dpc_locktrap.h dpc_log.h dpc_trap.h dpc_dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_free.c

dpc_isbad.obj : $(MASTERDEP) dpc_intdata.h dpc_trap.h dpc_safelist.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_isbad.c

dpc_stats.obj : $(MASTERDEP) dpc_intdata.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_stats.c

dpc_dbghooks.obj : $(MASTERDEP) dpc_intdata.h dpc_log.h dpc_dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_dbghooks.c

dpc_locktrap.obj : $(MASTERDEP) dpc_intdata.h dpc_trap.h dpc_locktrap.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_locktrap.c

dpc_safelist.obj : $(MASTERDEP) dpc_intdata.h dpc_safelist.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_safelist.c

dpcrtlmm.obj : $(MASTERDEP)
	$(COMPILE) $(ANSI) $(CFLGS) dpcrtlmm.c

dpc_log.obj : $(MASTERDEP) dpc_intdata.h dpc_log.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_log.c

dpc_vptrap.obj : $(MASTERDEP) dpc_intdata.h dpc_trap.h dpc_log.h dpc_safelist.h dpc_vptrap.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_vptrap.c

dpc_trap.obj : $(MASTERDEP) dpc_intdata.h dpc_log.h dpc_trap.h dpc_dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_trap.c

dpc_realloc.obj : $(MASTERDEP) dpc_intdata.h dpc_vptrap.h dpc_locktrap.h dpc_iblkptr.h dpc_dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_realloc.c

dpc_intdata.obj : $(MASTERDEP) dpc_intdata.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_intdata.c

dpc_iblkptr.obj : $(MASTERDEP) dpc_intdata.h dpc_trap.h dpc_vptrap.h dpc_iblkptr.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_iblkptr.c

dpc_getblksz.obj : $(MASTERDEP) dpc_intdata.h dpc_trap.h dpc_vptrap.h dpc_iblkptr.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_getblksz.c

dpc_bloclock.obj : $(MASTERDEP) dpc_bdflags.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_bloclock.c

dpc_bdflags.obj : $(MASTERDEP) dpc_intdata.h dpc_vptrap.h dpc_iblkptr.h dpc_dbghooks.h dpc_bdflags.h
	$(COMPILE) $(ANSI) $(CFLGS) dpc_bdflags.c

dpc_biglock.obj : $(MASTERDEP) dpc_vptrap.h dpc_iblkptr.h dpc_intdata.h dpc_biglock.h
        $(COMPILE) $(CFLGS) dpc_biglock.c

all:
	make -f $(THISFILE) config
	config
	make -f $(THISFILE) $(LIBNAME)
	make -f $(THISFILE) example

clean:
	$(FILEEXISTS) dpc_alloc.obj $(ERASE) dpc_alloc.obj
	$(FILEEXISTS) dpc_blkarray.obj $(ERASE) dpc_blkarray.obj
	$(FILEEXISTS) dpc_calloc.obj $(ERASE) dpc_calloc.obj
	$(FILEEXISTS) dpc_free.obj $(ERASE) dpc_free.obj
	$(FILEEXISTS) dpc_isbad.obj $(ERASE) dpc_isbad.obj
	$(FILEEXISTS) dpc_stats.obj $(ERASE) dpc_stats.obj
	$(FILEEXISTS) dpc_dbghooks.obj $(ERASE) dpc_dbghooks.obj
	$(FILEEXISTS) dpc_locktrap.obj $(ERASE) dpc_locktrap.obj
	$(FILEEXISTS) dpc_safelist.obj $(ERASE) dpc_safelist.obj
	$(FILEEXISTS) dpcrtlmm.obj $(ERASE) dpcrtlmm.obj
	$(FILEEXISTS) dpc_log.obj $(ERASE) dpc_log.obj
	$(FILEEXISTS) dpc_vptrap.obj $(ERASE) dpc_vptrap.obj
	$(FILEEXISTS) dpc_trap.obj $(ERASE) dpc_trap.obj
	$(FILEEXISTS) dpc_realloc.obj $(ERASE) dpc_realloc.obj
	$(FILEEXISTS) dpc_intdata.obj $(ERASE) dpc_intdata.obj
	$(FILEEXISTS) dpc_iblkptr.obj $(ERASE) dpc_iblkptr.obj
	$(FILEEXISTS) dpc_getblksz.obj $(ERASE) dpc_getblksz.obj
	$(FILEEXISTS) dpc_bloclock.obj $(ERASE) dpc_bloclock.obj
	$(FILEEXISTS) dpc_bdflags.obj $(ERASE) dpc_bdflags.obj
        $(FILEEXISTS) dpc_biglock.obj $(ERASE) dpc_biglock.obj
	$(FILEEXISTS) $(LIBTITLE).bak $(ERASE) $(LIBTITLE).bak
	$(FILEEXISTS) dpccap.obj $(ERASE) dpccap.obj
        $(FILEEXISTS) example?.obj $(ERASE) example?.obj
	$(FILEEXISTS) DPCRTLMM.LOG $(ERASE) DPCRTLMM.LOG
	#Don't forget Borland's annoying tds file, probally only made
	#When not in optimization mode (not sure though), better
	#get rid of it
	$(FILEEXISTS) example.tds $(ERASE) example.tds
	$(FILEEXISTS) example?.exe $(ERASE) example?.exe
	$(FILEEXISTS) example?.tds $(ERASE) example?.tds
	$(FILEEXISTS) $(LIBNAME) $(ERASE) $(LIBNAME)
	$(FILEEXISTS) config.exe $(ERASE) config.exe
	$(FILEEXISTS) config.obj $(ERASE) config.obj
	$(FILEEXISTS) config.h $(ERASE) config.h
	$(FILEEXISTS) config.tds $(ERASE) config.tds
	$(COPY) config.h.default config.h

# Clobber backward compat.
clobber : clean

# C based configurator rules

config : config.exe

config.exe : config.obj
        $(COMPILE) $(LFLGS) -econfig.exe config.obj

config.obj : config.c dpcrtlmm.h
	$(COMPILE) $(ANSI) $(CFLGS) config.c
