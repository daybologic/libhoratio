# Make file for DPCRTLMM
# Written by Overlord David Duncan Ross Palmer
# Overlord@DayboLogic.co.uk
# 24th August 2000
# Last modified 11th June 2001 by overlord

# This Makefile designed for Borland C++, you'll have to change the tools
# at the top of the file in the variables section to use Micro$oft or Colelus
# linker.  I have made everything easy to modify by putting it at the top
# of the file but if you have problems, email me.

# Paths & filenames - If this file is not called Makefile remember to
# change the variable 'THISFILE'
THISFILE=Makefile.bor
LIBTITLE=dpcrtlmm
LIBNAME=$(LIBTITLE).lib
# Master dependancies ALWAYS cause a rebuild
MASTERDEP=build.h dpcrtlmm.h $(THISFILE) biglock.h

# Tools
LIBRARY=tlib
# -A : ANSI C only
# -c : Compile with no link
COMPILE=bcc32
ANSI=-A
CFLGS=-c -DHDRSTOP -DDPCRTLMM_HDRSTOP -v   # Debugging
LFLGS=-v

# File control commands
FILEEXISTS=if exist
ERASE=erase
COPY=copy
PRINT=@echo
BLANKLINE=.

# Default build rule if nothing specified to build (build lib only)
default : $(LIBNAME)

example : example1 example2 example3

example1 : example1.exe
example2 : example2.exe
example3 : example3.exe

example1.exe : $(MASTERDEP) example1.obj $(LIBNAME)
	$(PRINT)$(BLANKLINE)
	$(PRINT) Building example1 program
        $(COMPILE) $(LFLGS) -eexample1.exe example1.obj $(LIBNAME)

example2.exe : $(MASTERDEP) example2.obj dpccap.obj $(LIBNAME)
	$(PRINT)$(BLANKLINE)
	$(PRINT) Building example2 program
        $(COMPILE) $(LFLGS) -eexample2.exe example2.obj dpccap.obj $(LIBNAME)

example3.exe : $(MASTERDEP) example3.obj $(LIBNAME)
	$(PRINT)$(BLANKLINE)
	$(PRINT) Building example3 program
        $(COMPILE) $(LFLGS) -eexample3.exe example3.obj $(LIBNAME)

example1.obj : $(MASTERDEP) example1.c
	$(COMPILE) $(ANSI) $(CFLGS) example1.c

example2.obj : $(MASTERDEP) example2.cpp
	$(COMPILE) $(ANSI) $(CFLGS) example2.cpp

example3.obj : $(MASTERDEP) example3.c
	$(COMPILE) $(ANSI) $(CFLGS) example3.c

dpccap.obj : $(MASTERDEP) dpccap.cpp
	$(COMPILE) $(ANSI) $(CFLGS) dpccap.cpp

$(LIBNAME) : alloc.obj blkarray.obj calloc.obj free.obj isbad.obj stats.obj dbghooks.obj locktrap.obj safelist.obj dpcrtlmm.obj log.obj vptrap.obj trap.obj realloc.obj intdata.obj iblkptr.obj getblksz.obj bloclock.obj bdflags.obj biglock.obj
	$(FILEEXISTS) $(LIBNAME) $(ERASE) $(LIBNAME)
	-$(LIBRARY) $(LIBNAME) +alloc.obj
	-$(LIBRARY) $(LIBNAME) +blkarray.obj
	-$(LIBRARY) $(LIBNAME) +calloc.obj
	-$(LIBRARY) $(LIBNAME) +free.obj
	-$(LIBRARY) $(LIBNAME) +isbad.obj
	-$(LIBRARY) $(LIBNAME) +stats.obj
	-$(LIBRARY) $(LIBNAME) +dbghooks.obj
	-$(LIBRARY) $(LIBNAME) +locktrap.obj
	-$(LIBRARY) $(LIBNAME) +safelist.obj
	-$(LIBRARY) $(LIBNAME) +dpcrtlmm.obj
	-$(LIBRARY) $(LIBNAME) +log.obj
	-$(LIBRARY) $(LIBNAME) +vptrap.obj
	-$(LIBRARY) $(LIBNAME) +trap.obj
	-$(LIBRARY) $(LIBNAME) +realloc.obj
	-$(LIBRARY) $(LIBNAME) +intdata.obj
	-$(LIBRARY) $(LIBNAME) +iblkptr.obj
	-$(LIBRARY) $(LIBNAME) +getblksz.obj
	-$(LIBRARY) $(LIBNAME) +bloclock.obj
	-$(LIBRARY) $(LIBNAME) +bdflags.obj
        -$(LIBRARY) $(LIBNAME) +biglock.obj
	$(PRINT)$(BLANKLINE)
	$(PRINT) (C)2000-2001, David Duncan Ross Palmer, Daybo Logic.
	$(PRINT) Subject to the GNU General Public License.
	$(PRINT) http://www.daybologic.co.uk/dev/dpcrtlmm

alloc.obj : $(MASTERDEP) intdata.h log.h vptrap.h dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) alloc.c

blkarray.obj : $(MASTERDEP) intdata.h log.h trap.h safelist.h dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) blkarray.c

calloc.obj : $(MASTERDEP) intdata.h log.h iblkptr.h dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) calloc.c

free.obj : $(MASTERDEP) intdata.h vptrap.h locktrap.h log.h trap.h dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) free.c

isbad.obj : $(MASTERDEP) intdata.h trap.h safelist.h
	$(COMPILE) $(ANSI) $(CFLGS) isbad.c

stats.obj : $(MASTERDEP) intdata.h
	$(COMPILE) $(ANSI) $(CFLGS) stats.c

dbghooks.obj : $(MASTERDEP) intdata.h log.h dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) dbghooks.c

locktrap.obj : $(MASTERDEP) intdata.h trap.h locktrap.h
	$(COMPILE) $(ANSI) $(CFLGS) locktrap.c

safelist.obj : $(MASTERDEP) intdata.h safelist.h
	$(COMPILE) $(ANSI) $(CFLGS) safelist.c

dpcrtlmm.obj : $(MASTERDEP)
	$(COMPILE) $(ANSI) $(CFLGS) dpcrtlmm.c

log.obj : $(MASTERDEP) intdata.h log.h
	$(COMPILE) $(ANSI) $(CFLGS) log.c

vptrap.obj : $(MASTERDEP) intdata.h trap.h log.h safelist.h vptrap.h
	$(COMPILE) $(ANSI) $(CFLGS) vptrap.c

trap.obj : $(MASTERDEP) intdata.h log.h trap.h dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) trap.c

realloc.obj : $(MASTERDEP) intdata.h vptrap.h locktrap.h iblkptr.h dbghooks.h
	$(COMPILE) $(ANSI) $(CFLGS) realloc.c

intdata.obj : $(MASTERDEP) intdata.h
	$(COMPILE) $(ANSI) $(CFLGS) intdata.c

iblkptr.obj : $(MASTERDEP) intdata.h trap.h vptrap.h iblkptr.h
	$(COMPILE) $(ANSI) $(CFLGS) iblkptr.c

getblksz.obj : $(MASTERDEP) intdata.h trap.h vptrap.h iblkptr.h
	$(COMPILE) $(ANSI) $(CFLGS) getblksz.c

bloclock.obj : $(MASTERDEP) bdflags.h
	$(COMPILE) $(ANSI) $(CFLGS) bloclock.c

bdflags.obj : $(MASTERDEP) intdata.h vptrap.h iblkptr.h dbghooks.h bdflags.h
	$(COMPILE) $(ANSI) $(CFLGS) bdflags.c

biglock.obj : $(MASTERDEP) vptrap.h iblkptr.h intdata.h biglock.h
        $(COMPILE) $(CFLGS) biglock.c

all:
	make -f $(THISFILE) config
	config
	make -f $(THISFILE) $(LIBNAME)
	make -f $(THISFILE) example

clean:
	$(FILEEXISTS) alloc.obj $(ERASE) alloc.obj
	$(FILEEXISTS) blkarray.obj $(ERASE) blkarray.obj
	$(FILEEXISTS) calloc.obj $(ERASE) calloc.obj
	$(FILEEXISTS) free.obj $(ERASE) free.obj
	$(FILEEXISTS) isbad.obj $(ERASE) isbad.obj
	$(FILEEXISTS) stats.obj $(ERASE) stats.obj
	$(FILEEXISTS) dbghooks.obj $(ERASE) dbghooks.obj
	$(FILEEXISTS) locktrap.obj $(ERASE) locktrap.obj
	$(FILEEXISTS) safelist.obj $(ERASE) safelist.obj
	$(FILEEXISTS) dpcrtlmm.obj $(ERASE) dpcrtlmm.obj
	$(FILEEXISTS) log.obj $(ERASE) log.obj
	$(FILEEXISTS) vptrap.obj $(ERASE) vptrap.obj
	$(FILEEXISTS) trap.obj $(ERASE) trap.obj
	$(FILEEXISTS) realloc.obj $(ERASE) realloc.obj
	$(FILEEXISTS) intdata.obj $(ERASE) intdata.obj
	$(FILEEXISTS) iblkptr.obj $(ERASE) iblkptr.obj
	$(FILEEXISTS) getblksz.obj $(ERASE) getblksz.obj
	$(FILEEXISTS) bloclock.obj $(ERASE) bloclock.obj
	$(FILEEXISTS) bdflags.obj $(ERASE) bdflags.obj
        $(FILEEXISTS) biglock.obj $(ERASE) biglock.obj
	$(FILEEXISTS) $(LIBTITLE).bak $(ERASE) $(LIBTITLE).bak
	$(FILEEXISTS) dpccap.obj $(ERASE) dpccap.obj
        $(FILEEXISTS) example?.obj $(ERASE) example?.obj
	$(FILEEXISTS) DPCRTLMM.LOG $(ERASE) DPCRTLMM.LOG
	#Don't forget Borland's annoying tds file, probally only made
	#When not in optimization mode (not sure though), better
	#get rid of it
	$(FILEEXISTS) example.tds $(ERASE) example.tds
	$(FILEEXISTS) example?.exe $(ERASE) example?.exe
	$(FILEEXISTS) $(LIBNAME) $(ERASE) $(LIBNAME)
	$(FILEEXISTS) config.exe $(ERASE) config.exe
	$(FILEEXISTS) config.obj $(ERASE) config.obj
	$(FILEEXISTS) config.h $(ERASE) config.h
	$(COPY) config.h.default config.h

# Clobber backward compat.
clobber : clean

# C based configurator rules

config : config.exe

config.exe : config.obj
        $(COMPILE) $(LFLGS) -econfig.exe config.obj

config.obj : config.c dpcrtlmm.h
	$(COMPILE) $(ANSI) $(CFLGS) config.c
